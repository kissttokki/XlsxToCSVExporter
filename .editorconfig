# 최상위 디렉터리 설정을 상속받지 않음
root = true

[*]
charset = utf-8

# C# 파일에만 적용
[*.cs]

##############################
# ▶ 들여쓰기 및 줄바꿈 설정
##############################

indent_style = space
indent_size = 4
tab_width = 4
end_of_line = crlf
insert_final_newline = false

##############################
# ▶ .NET 코드 스타일 설정
##############################

# using 지시문
dotnet_separate_import_directive_groups = false
dotnet_sort_system_directives_first = false

# this. / Me. 사용 여부
dotnet_style_qualification_for_event = false
dotnet_style_qualification_for_field = false
dotnet_style_qualification_for_method = false
dotnet_style_qualification_for_property = false

# BCL 타입 및 키워드
dotnet_style_predefined_type_for_locals_parameters_members = true
dotnet_style_predefined_type_for_member_access = true

# 괄호 스타일
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity
dotnet_style_parentheses_in_other_operators = never_if_unnecessary

# null 처리 및 간결한 표현
dotnet_style_null_propagation = true
dotnet_style_object_initializer = true
dotnet_style_collection_initializer = true
dotnet_style_coalesce_expression = true
dotnet_style_prefer_conditional_expression_over_assignment = true
dotnet_style_prefer_conditional_expression_over_return = true
dotnet_style_prefer_compound_assignment = true
dotnet_style_prefer_auto_properties = true

# 기타 표현
dotnet_style_prefer_simplified_boolean_expressions = true
dotnet_style_prefer_simplified_interpolation = true
dotnet_style_namespace_match_folder = true
dotnet_style_operator_placement_when_wrapping = beginning_of_line

##############################
# ▶ C# 코드 스타일 설정
##############################

# var 사용 여부
csharp_style_var_elsewhere = false
csharp_style_var_for_built_in_types = false
csharp_style_var_when_type_is_apparent = false

# 식 본문 멤버
csharp_style_expression_bodied_methods = false
csharp_style_expression_bodied_properties = true
csharp_style_expression_bodied_constructors = false

# 패턴 매칭
csharp_style_pattern_matching_over_as_with_null_check = true
csharp_style_pattern_matching_over_is_with_cast_check = true
csharp_style_prefer_switch_expression = true

# 기타 스타일
csharp_style_prefer_method_group_conversion = true
csharp_style_unused_value_assignment_preference = discard_variable
csharp_style_prefer_index_operator = true
csharp_prefer_braces = true

# using 지시문 위치
csharp_using_directive_placement = outside_namespace

##############################
# ▶ 명명 규칙: 기호 그룹
##############################

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected
dotnet_naming_symbols.interface.required_modifiers = 

dotnet_naming_symbols.types.applicable_kinds = class, struct, enum, interface
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected
dotnet_naming_symbols.types.required_modifiers = 

dotnet_naming_symbols.non_field_members.applicable_kinds = method, property, event
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected
dotnet_naming_symbols.non_field_members.required_modifiers = 

dotnet_naming_symbols.private_fields.applicable_kinds = field
dotnet_naming_symbols.private_fields.applicable_accessibilities = private
dotnet_naming_symbols.private_fields.required_modifiers = 

dotnet_naming_symbols.private_static_fields.applicable_kinds = field
dotnet_naming_symbols.private_static_fields.applicable_accessibilities = private
dotnet_naming_symbols.private_static_fields.required_modifiers = static

dotnet_naming_symbols.private_static_readonly_fields.applicable_kinds = field
dotnet_naming_symbols.private_static_readonly_fields.applicable_accessibilities = private
dotnet_naming_symbols.private_static_readonly_fields.required_modifiers = static, readonly

dotnet_naming_symbols.const_fields.applicable_kinds = field
dotnet_naming_symbols.const_fields.required_modifiers = const

##############################
# ▶ 명명 규칙: 스타일 정의
##############################

dotnet_naming_style.underscore_camel_case.capitalization = camel_case
dotnet_naming_style.underscore_camel_case.required_prefix = _

dotnet_naming_style.static_prefix_s.capitalization = camel_case
dotnet_naming_style.static_prefix_s.required_prefix = s_

dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.begins_with_i.capitalization = pascal_case
dotnet_naming_style.begins_with_i.required_prefix = I

##############################
# ▶ 명명 규칙: 규칙 연결 및 경고 수준
##############################

# 인터페이스 → I 접두사
dotnet_naming_rule.interface_should_start_with_i.symbols = interface
dotnet_naming_rule.interface_should_start_with_i.style = begins_with_i
dotnet_naming_rule.interface_should_start_with_i.severity = warning

# 타입 → PascalCase
dotnet_naming_rule.types_should_be_pascal.symbols = types
dotnet_naming_rule.types_should_be_pascal.style = pascal_case
dotnet_naming_rule.types_should_be_pascal.severity = warning

# 메서드/속성/이벤트 → PascalCase
dotnet_naming_rule.members_should_be_pascal.symbols = non_field_members
dotnet_naming_rule.members_should_be_pascal.style = pascal_case
dotnet_naming_rule.members_should_be_pascal.severity = warning

# private 인스턴스 필드 → `_`
dotnet_naming_rule.private_fields_underscored.symbols = private_fields
dotnet_naming_rule.private_fields_underscored.style = underscore_camel_case
dotnet_naming_rule.private_fields_underscored.severity = warning

# private static → `s_`
dotnet_naming_rule.private_static_s_prefix.symbols = private_static_fields
dotnet_naming_rule.private_static_s_prefix.style = static_prefix_s
dotnet_naming_rule.private_static_s_prefix.severity = warning

# private static readonly → `s_`
dotnet_naming_rule.private_static_readonly_s_prefix.symbols = private_static_readonly_fields
dotnet_naming_rule.private_static_readonly_s_prefix.style = static_prefix_s
dotnet_naming_rule.private_static_readonly_s_prefix.severity = warning

# const → PascalCase
dotnet_naming_rule.const_fields_pascal.symbols = const_fields
dotnet_naming_rule.const_fields_pascal.style = pascal_case
dotnet_naming_rule.const_fields_pascal.severity = warning

# CS8618: null을 허용하지 않는 필드는 생성자를 종료할 때 null이 아닌 값을 포함해야 합니다. 'required' 한정자를 추가하거나 nullable로 선언하는 것이 좋습니다.
dotnet_diagnostic.CS8618.severity = suggestion
